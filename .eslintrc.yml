env:
  es6: true
  node: true
extends:
  - eslint:recommended
  - plugin:prettier/recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - plugin:import/warnings
  - plugin:node/recommended
parserOptions:
  ecmaVersion: 2020
plugins:
  - prettier
root: true
rules:
  import/first: warn
  import/newline-after-import: warn
  import/no-named-as-default: 'off'
  import/order:
    - warn
    - pathGroupsExcludedImportTypes: ["builtin"]
      newlines-between: always
      alphabetize:
        order: asc
        caseInsensitive: true
  prettier/prettier: warn
overrides:
  - files:
      - '*.ts'
      - '*.tsx'
    parser: '@typescript-eslint/parser'
    parserOptions:
      sourceType: module
    plugins:
      - '@typescript-eslint'
    extends:
      - plugin:@typescript-eslint/recommended
    rules:
      '@typescript-eslint/explicit-function-return-type': 'off'
      '@typescript-eslint/explicit-module-boundary-types': 'off'
      '@typescript-eslint/interface-name-prefix': 'off'
      '@typescript-eslint/no-empty-function': 'off'
      '@typescript-eslint/no-explicit-any': 'off'
      '@typescript-eslint/no-unused-vars':
        - 'error'
        - argsIgnorePattern: '^_'
          varsIgnorePattern: '^_'
      '@typescript-eslint/no-use-before-define': 'off'
      '@typescript-eslint/prefer-optional-chain': warn
      '@typescript-eslint/ban-types': [
        'error',
        {
          'extendDefaults': true,
          'types': {
            '{}': false
          }
        }
      ]
      import/no-unresolved: 'off'
      no-undef: 'off'
      "node/no-missing-import":
        - "error"
        - tryExtensions: [".js", ".json", ".ts", ".node"]
      node/no-unpublished-import: 'off'
      node/no-unpublished-require: 'off'
      node/no-unsupported-features/es-syntax: 'off'
